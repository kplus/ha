# Timer for slow turn off lights, 60s timeout
- alias: Slow Off lights
  hide_entity: true
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
              #        - binary_sensor.kitchen
        - binary_sensor.toilet
        - binary_sensor.bath
      to: 'off'
      # 89s
      for: '00:01:29'
    - platform: state
      entity_id:
        - binary_sensor.playroom
      to: 'off'
      for: '00:00:53'
    - platform: state
      entity_id:
        - binary_sensor.dining
      to: 'off'
      for: '00:00:43'
      # saftguard for all sensors
    - platform: state
      entity_id:
        - binary_sensor.hall
          #        - binary_sensor.kitchen
        - binary_sensor.toilet
        - binary_sensor.dining
        - binary_sensor.playroom
        - binary_sensor.bath
      to: 'off'
      # 307s
      for: '00:05:07'
  condition:
    condition: template
    value_template: '{{ is_state("light." + trigger.entity_id.split(".")[1], "on") }}'
  action:
  - service: light.turn_off
    data_template:
      entity_id: '{{"light." + trigger.entity_id.split(".")[1]}}'

- alias: Turn on lights
  hide_entity: true
  initial_state: 'on'
  trigger:
    - platform: state 
      entity_id:
        - binary_sensor.playroom
        - binary_sensor.kitchen
        - binary_sensor.toilet
        - binary_sensor.dining
        - binary_sensor.bath
      to: 'on' 
  condition:
    condition: and
    conditions:
        # when LED is off
      - condition: template
        value_template: '{{ is_state("light." + trigger.entity_id.split(".")[1], "off") }}'
        # only active between 1 hour after sunset and 1 hour before sunrise
      - condition: or
        conditions:
          - condition: sun
            after: sunset
            after_offset: "-1:00:00"
          - condition: sun
            before: sunrise
            before_offset: "1:00:00"
  action:
    - service: light.turn_on
      data_template:
        entity_id: '{{"light." + trigger.entity_id.split(".")[1]}}'
    - service: automation.turn_on
      data_template:
        entity_id: '{{"automation.quick_off_" + trigger.entity_id.split(".")[1]}}'


# quickly turn off lights functions need to be repeated for each light
# as the services need to be turn off individually.

- alias: Quick off playroom
  hide_entity: true
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: light.playroom
      to: 'off'
  action:
    - delay: '00:00:08'
    - service: automation.turn_off
      entity_id: automation.quick_off_playroom
    - condition: and
      conditions:
        - condition: state
          entity_id: light.playroom
          state: "on"
        - condition: template
          value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.playroom.last_changed)) > 7 }}'
    - service: light.turn_off
      entity_id: light.playroom

- alias: Quick off kitchen
  hide_entity: true
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: light.kitchen
      to: 'off'
  action:
    - delay: '00:00:08'
    - service: automation.turn_off
      entity_id: automation.quick_off_kitchen
    - condition: and
      conditions:
        - condition: state
          entity_id: light.kitchen
          state: "on"
        - condition: template
          value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.kitchen.last_changed)) > 7 }}'
    - service: light.turn_off
      entity_id: light.kitchen

- alias: Quick off toilet
  hide_entity: true
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: light.toilet
      to: 'off'
  action:
    - delay: '00:00:08'
    - service: automation.turn_off
      entity_id: automation.quick_off_toilet
    - condition: and
      conditions:
        - condition: state
          entity_id: light.toilet
          state: "on"
        - condition: template
          value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.toilet.last_changed)) > 7 }}'
    - service: light.turn_off
      entity_id: light.kitchen

- alias: Quick off dining
  hide_entity: true
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: light.dining
      to: 'off'
  action:
    - delay: '00:00:08'
    - service: automation.turn_off
      entity_id: automation.quick_off_dining
    - condition: and
      conditions:
        - condition: state
          entity_id: light.dining
          state: "on"
        - condition: template
          value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.dining.last_changed)) > 7 }}'
    - service: light.turn_off
      entity_id: light.dining

- alias: Quick off bath
  hide_entity: true
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: light.bath
      to: 'off'
  action:
    - delay: '00:00:13'
    - service: automation.turn_off
      entity_id: automation.quick_off_bath
    - condition: and
      conditions:
        - condition: state
          entity_id: light.bath
          state: "on"
        - condition: template
          value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.bath.last_changed)) > 7 }}'
    - service: light.turn_off
      entity_id: light.kitchen
